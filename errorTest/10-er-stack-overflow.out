n: 4069n: 4068n: 4067n: 4066n: 4065n: 4064n: 4063n: 4062n: 4061n: 4060n: 4059n: 4058n: 4057n: 4056n: 4055n: 4054n: 4053n: 4052n: 4051n: 4050n: 4049n: 4048n: 4047n: 4046n: 4045n: 4044n: 4043n: 4042n: 4041n: 4040n: 4039n: 4038n: 4037n: 4036n: 4035n: 4034n: 4033n: 4032n: 4031n: 4030n: 4029n: 4028n: 4027n: 4026n: 4025n: 4024n: 4023n: 4022n: 4021n: 4020n: 4019n: 4018n: 4017n: 4016n: 4015n: 4014n: 4013n: 4012n: 4011n: 4010n: 4009n: 4008n: 4007n: 4006n: 4005n: 4004n: 4003n: 4002n: 4001n: 4000n: 3999n: 3998n: 3997n: 3996n: 3995n: 3994n: 3993n: 3992n: 3991n: 3990n: 3989n: 3988n: 3987n: 3986n: 3985n: 3984n: 3983n: 3982n: 3981n: 3980n: 3979n: 3978n: 3977n: 3976n: 3975n: 3974n: 3973n: 3972n: 3971n: 3970n: 3969n: 3968n: 3967n: 3966n: 3965n: 3964n: 3963n: 3962n: 3961n: 3960n: 3959n: 3958n: 3957n: 3956n: 3955n: 3954n: 3953n: 3952n: 3951n: 3950n: 3949n: 3948n: 3947n: 3946n: 3945n: 3944n: 3943n: 3942n: 3941n: 3940n: 3939n: 3938n: 3937n: 3936n: 3935n: 3934n: 3933n: 3932n: 3931n: 3930n: 3929n: 3928n: 3927n: 3926n: 3925n: 3924n: 3923n: 3922n: 3921n: 3920n: 3919n: 3918n: 3917n: 3916n: 3915n: 3914n: 3913n: 3912n: 3911n: 3910n: 3909n: 3908n: 3907n: 3906n: 3905n: 3904n: 3903n: 3902n: 3901n: 3900n: 3899n: 3898n: 3897n: 3896n: 3895n: 3894n: 3893n: 3892n: 3891n: 3890n: 3889n: 3888n: 3887n: 3886n: 3885n: 3884n: 3883n: 3882n: 3881n: 3880n: 3879n: 3878n: 3877n: 3876n: 3875n: 3874n: 3873n: 3872n: 3871n: 3870n: 3869n: 3868n: 3867n: 3866n: 3865n: 3864n: 3863n: 3862n: 3861n: 3860n: 3859n: 3858n: 3857n: 3856n: 3855n: 3854n: 3853n: 3852n: 3851n: 3850n: 3849n: 3848n: 3847n: 3846n: 3845n: 3844n: 3843n: 3842n: 3841n: 3840n: 3839n: 3838n: 3837n: 3836n: 3835n: 3834n: 3833n: 3832n: 3831n: 3830n: 3829n: 3828n: 3827n: 3826n: 3825n: 3824n: 3823n: 3822n: 3821n: 3820n: 3819n: 3818n: 3817n: 3816n: 3815n: 3814n: 3813n: 3812n: 3811n: 3810n: 3809n: 3808n: 3807n: 3806n: 3805n: 3804n: 3803n: 3802n: 3801n: 3800n: 3799n: 3798n: 3797n: 3796n: 3795n: 3794n: 3793n: 3792n: 3791n: 3790n: 3789n: 3788n: 3787n: 3786n: 3785n: 3784n: 3783n: 3782n: 3781n: 3780n: 3779n: 3778n: 3777n: 3776n: 3775n: 3774n: 3773n: 3772n: 3771n: 3770n: 3769n: 3768n: 3767n: 3766n: 3765n: 3764n: 3763n: 3762n: 3761n: 3760n: 3759n: 3758n: 3757n: 3756n: 3755n: 3754n: 3753n: 3752n: 3751n: 3750n: 3749n: 3748n: 3747n: 3746n: 3745n: 3744n: 3743n: 3742n: 3741n: 3740n: 3739n: 3738n: 3737n: 3736n: 3735n: 3734n: 3733n: 3732n: 3731n: 3730n: 3729n: 3728n: 3727n: 3726n: 3725n: 3724n: 3723n: 3722n: 3721n: 3720n: 3719n: 3718n: 3717n: 3716n: 3715n: 3714n: 3713n: 3712n: 3711n: 3710n: 3709n: 3708n: 3707n: 3706n: 3705n: 3704n: 3703n: 3702n: 3701n: 3700n: 3699n: 3698n: 3697n: 3696n: 3695n: 3694n: 3693n: 3692n: 3691n: 3690n: 3689n: 3688n: 3687n: 3686n: 3685n: 3684n: 3683n: 3682n: 3681n: 3680n: 3679n: 3678n: 3677n: 3676n: 3675n: 3674n: 3673n: 3672n: 3671n: 3670n: 3669n: 3668n: 3667n: 3666n: 3665n: 3664n: 3663n: 3662n: 3661n: 3660n: 3659n: 3658n: 3657n: 3656n: 3655n: 3654n: 3653n: 3652n: 3651n: 3650n: 3649n: 3648n: 3647n: 3646n: 3645n: 3644n: 3643n: 3642n: 3641n: 3640n: 3639n: 3638n: 3637n: 3636n: 3635n: 3634n: 3633n: 3632n: 3631n: 3630n: 3629n: 3628n: 3627n: 3626n: 3625n: 3624n: 3623n: 3622n: 3621n: 3620n: 3619n: 3618n: 3617n: 3616n: 3615n: 3614n: 3613n: 3612n: 3611n: 3610n: 3609n: 3608n: 3607n: 3606n: 3605n: 3604n: 3603n: 3602n: 3601n: 3600n: 3599n: 3598n: 3597n: 3596n: 3595n: 3594n: 3593n: 3592n: 3591n: 3590n: 3589n: 3588n: 3587n: 3586n: 3585n: 3584n: 3583n: 3582n: 3581n: 3580n: 3579n: 3578n: 3577n: 3576n: 3575n: 3574n: 3573n: 3572n: 3571n: 3570n: 3569n: 3568n: 3567n: 3566n: 3565n: 3564n: 3563n: 3562n: 3561n: 3560n: 3559n: 3558n: 3557n: 3556n: 3555n: 3554n: 3553n: 3552n: 3551n: 3550n: 3549n: 3548n: 3547n: 3546n: 3545n: 3544n: 3543n: 3542n: 3541n: 3540n: 3539n: 3538n: 3537n: 3536n: 3535n: 3534n: 3533n: 3532n: 3531n: 3530n: 3529n: 3528n: 3527n: 3526n: 3525n: 3524n: 3523n: 3522n: 3521n: 3520n: 3519n: 3518n: 3517n: 3516n: 3515n: 3514n: 3513n: 3512n: 3511n: 3510n: 3509n: 3508n: 3507n: 3506n: 3505n: 3504n: 3503n: 3502n: 3501n: 3500n: 3499n: 3498n: 3497n: 3496n: 3495n: 3494n: 3493n: 3492n: 3491n: 3490n: 3489n: 3488n: 3487n: 3486n: 3485n: 3484n: 3483n: 3482n: 3481n: 3480n: 3479n: 3478n: 3477n: 3476n: 3475n: 3474n: 3473n: 3472n: 3471n: 3470n: 3469n: 3468n: 3467n: 3466n: 3465n: 3464n: 3463n: 3462n: 3461n: 3460n: 3459n: 3458n: 3457n: 3456n: 3455n: 3454n: 3453n: 3452n: 3451n: 3450n: 3449n: 3448n: 3447n: 3446n: 3445n: 3444n: 3443n: 3442n: 3441n: 3440n: 3439n: 3438n: 3437n: 3436n: 3435n: 3434n: 3433n: 3432n: 3431n: 3430n: 3429n: 3428n: 3427n: 3426n: 3425n: 3424n: 3423n: 3422n: 3421n: 3420n: 3419n: 3418n: 3417n: 3416n: 3415n: 3414n: 3413n: 3412n: 3411n: 3410n: 3409n: 3408n: 3407n: 3406n: 3405n: 3404n: 3403n: 3402n: 3401n: 3400n: 3399n: 3398n: 3397n: 3396n: 3395n: 3394n: 3393n: 3392n: 3391n: 3390n: 3389n: 3388n: 3387n: 3386n: 3385n: 3384n: 3383n: 3382n: 3381n: 3380n: 3379n: 3378n: 3377n: 3376n: 3375n: 3374n: 3373n: 3372n: 3371n: 3370n: 3369n: 3368n: 3367n: 3366n: 3365n: 3364n: 3363n: 3362n: 3361n: 3360n: 3359n: 3358n: 3357n: 3356n: 3355n: 3354n: 3353n: 3352n: 3351n: 3350n: 3349n: 3348n: 3347n: 3346n: 3345n: 3344n: 3343n: 3342n: 3341n: 3340n: 3339n: 3338n: 3337n: 3336n: 3335n: 3334n: 3333n: 3332n: 3331n: 3330n: 3329n: 3328n: 3327n: 3326n: 3325n: 3324n: 3323n: 3322n: 3321n: 3320n: 3319n: 3318n: 3317n: 3316n: 3315n: 3314n: 3313n: 3312n: 3311n: 3310n: 3309n: 3308n: 3307n: 3306n: 3305n: 3304n: 3303n: 3302n: 3301n: 3300n: 3299n: 3298n: 3297n: 3296n: 3295n: 3294n: 3293n: 3292n: 3291n: 3290n: 3289n: 3288n: 3287n: 3286n: 3285n: 3284n: 3283n: 3282n: 3281n: 3280n: 3279n: 3278n: 3277n: 3276n: 3275n: 3274n: 3273n: 3272n: 3271n: 3270n: 3269n: 3268n: 3267n: 3266n: 3265n: 3264n: 3263n: 3262n: 3261n: 3260n: 3259n: 3258n: 3257n: 3256n: 3255n: 3254n: 3253n: 3252n: 3251n: 3250n: 3249n: 3248n: 3247n: 3246n: 3245n: 3244n: 3243n: 3242n: 3241n: 3240n: 3239n: 3238n: 3237n: 3236n: 3235n: 3234n: 3233n: 3232n: 3231n: 3230n: 3229n: 3228n: 3227n: 3226n: 3225n: 3224n: 3223n: 3222n: 3221n: 3220n: 3219n: 3218n: 3217n: 3216n: 3215n: 3214n: 3213n: 3212n: 3211n: 3210n: 3209n: 3208n: 3207n: 3206n: 3205n: 3204n: 3203n: 3202n: 3201n: 3200n: 3199n: 3198n: 3197Error: internal error: RangeError: Maximum call stack size exceeded
#(errorTest/10-er-stack-overflow.p:7)     print("n: {n}")
                                    |.....^
#(errorTest/10-er-stack-overflow.p:3) def fact(n) {
                                    |.^
#(errorTest/10-er-stack-overflow.p:8)     return n * fact(n-1)
                                    |................^
#(errorTest/10-er-stack-overflow.p:8)     return n * fact(n-1)
                                    |..............^
#(errorTest/10-er-stack-overflow.p:3) def fact(n) {
                                    |.^
#(errorTest/10-er-stack-overflow.p:8)     return n * fact(n-1)
                                    |................^
#(errorTest/10-er-stack-overflow.p:3) def fact(n) {
                                    |.^
#(errorTest/10-er-stack-overflow.p:8)     return n * fact(n-1)
                                    |................^
#(errorTest/10-er-stack-overflow.p:3) def fact(n) {
                                    |.^
#(errorTest/10-er-stack-overflow.p:8)     return n * fact(n-1)
                                    |................^
#(errorTest/10-er-stack-overflow.p:3) def fact(n) {
                                    |.^
#(errorTest/10-er-stack-overflow.p:8)     return n * fact(n-1)
                                    |................^
#(errorTest/10-er-stack-overflow.p:3) def fact(n) {
                                    |.^
#(errorTest/10-er-stack-overflow.p:8)     return n * fact(n-1)
                                    |................^
#(errorTest/10-er-stack-overflow.p:3) def fact(n) {
                                    |.^
#(errorTest/10-er-stack-overflow.p:8)     return n * fact(n-1)
                                    |................^
#(errorTest/10-er-stack-overflow.p:3) def fact(n) {
                                    |.^
#(errorTest/10-er-stack-overflow.p:8)     return n * fact(n-1)
                                    |................^
#(errorTest/10-er-stack-overflow.p:3) def fact(n) {
                                    |.^
#(errorTest/10-er-stack-overflow.p:8)     return n * fact(n-1)
                                    |................^

.... stack frames ommitted ...
